/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v2alpha1

import (
	"fmt"
	v2alpha1 "github.com/artemiscloud/activemq-artemis-operator/api/v2alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ActiveMQArtemisScaledownLister helps list ActiveMQArtemisScaledowns.
type ActiveMQArtemisScaledownLister interface {
	// List lists all ActiveMQArtemisScaledowns in the indexer.
	List(selector labels.Selector) (ret []*v2alpha1.ActiveMQArtemisScaledown, err error)
	// ActiveMQArtemisScaledowns returns an object that can list and get ActiveMQArtemisScaledowns.
	ActiveMQArtemisScaledowns(namespace string) ActiveMQArtemisScaledownNamespaceLister
	ActiveMQArtemisScaledownListerExpansion
}

// activeMQArtemisScaledownLister implements the ActiveMQArtemisScaledownLister interface.
type activeMQArtemisScaledownLister struct {
	indexer cache.Indexer
}

// NewActiveMQArtemisScaledownLister returns a new ActiveMQArtemisScaledownLister.
func NewActiveMQArtemisScaledownLister(indexer cache.Indexer) ActiveMQArtemisScaledownLister {
	return &activeMQArtemisScaledownLister{indexer: indexer}
}

// List lists all ActiveMQArtemisScaledowns in the indexer.
func (s *activeMQArtemisScaledownLister) List(selector labels.Selector) (ret []*v2alpha1.ActiveMQArtemisScaledown, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v2alpha1.ActiveMQArtemisScaledown))
	})
	return ret, err
}

// ActiveMQArtemisScaledowns returns an object that can list and get ActiveMQArtemisScaledowns.
func (s *activeMQArtemisScaledownLister) ActiveMQArtemisScaledowns(namespace string) ActiveMQArtemisScaledownNamespaceLister {
	return activeMQArtemisScaledownNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ActiveMQArtemisScaledownNamespaceLister helps list and get ActiveMQArtemisScaledowns.
type ActiveMQArtemisScaledownNamespaceLister interface {
	// List lists all ActiveMQArtemisScaledowns in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v2alpha1.ActiveMQArtemisScaledown, err error)
	// Get retrieves the ActiveMQArtemisScaledown from the indexer for a given namespace and name.
	Get(name string) (*v2alpha1.ActiveMQArtemisScaledown, error)
	ActiveMQArtemisScaledownNamespaceListerExpansion
}

// activeMQArtemisScaledownNamespaceLister implements the ActiveMQArtemisScaledownNamespaceLister
// interface.
type activeMQArtemisScaledownNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ActiveMQArtemisScaledowns in the indexer for a given namespace.
func (s activeMQArtemisScaledownNamespaceLister) List(selector labels.Selector) (ret []*v2alpha1.ActiveMQArtemisScaledown, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v2alpha1.ActiveMQArtemisScaledown))
	})
	return ret, err
}

// Get retrieves the ActiveMQArtemisScaledown from the indexer for a given namespace and name.
func (s activeMQArtemisScaledownNamespaceLister) Get(name string) (*v2alpha1.ActiveMQArtemisScaledown, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, fmt.Errorf("activemqartemisscaledown not found: %s", name)
	}
	return obj.(*v2alpha1.ActiveMQArtemisScaledown), nil
}
