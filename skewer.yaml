title: Artemiscloud Hello World
subtitle: A minimal messaging solution deployed in a Kubernetes cluster
# github_actions_url: https://github.com/pwright/artemiscloud-hello-world/actions/workflows/main.yaml
overview: |
  This example is a very simple multi-protocol messaging solution.
  Before starting, make sure you have golang installed.
sites:
  hello-world:
    kubeconfig: ~/.kube/config-hello-world
    namespace: hello-world
steps:
  - title: Create a namespace
    preamble: |
      Use `kubectl create namespace` to create a `hello-world` namespace.
    commands:
      hello-world:
        - run: kubectl create namespace hello-world
          output: namespace/hello-world created
        - run: kubectl config set-context --current --namespace hello-world
  - title: Deploy operator
    preamble: |
      Deploy the Artemis operator to the current namespace.
    commands:
      hello-world:
        - run: cd subrepos/operator/deploy; bash ./install_opr.sh
  - title: Check operator
    commands:
      hello-world:
        - run: sleep 40
          apply: test
        - run: kubectl get pods
          output: activemq-artemis-controller-manager-f8fb97ddd-bjrtv   1/1     Running   0          1m
  - title: Create a Broker instance
    commands:
      hello-world:
        - run: kubectl create -f broker-with-console.yaml
          output: activemqartemis.broker.amq.io/ex-aao created
        - run: sleep 90
          apply: test
  - title: Produce and check messages
    commands:
      hello-world:
        - run: read -n 1 -p "temp" temp
        - run:  kubectl exec ex-aao-ss-0 -- amq-broker/bin/artemis producer --user x --password y --url tcp://ex-aao-ss-0:61616 --message-count=100
          output: Defaulted container ex-aao-container out of ex-aao-container, ex-aao-container-init (init)
        - run:  kubectl exec ex-aao-ss-0 -- amq-broker/bin/artemis queue stat --user x --password y --url tcp://ex-aao-ss-0:61616
          output: Defaulted container ex-aao-container out of ex-aao-container, ex-aao-container-init (init)
  - title: Get console URL
    commands:
      hello-world:
        - run:  kubectl get svc ex-aao-wconsj-0-svc
          output: ex-aao-wconsj-0-svc   ClusterIP   10.100.215.107   <none>        8161/TCP   10m
        - run: read -n 1 -p "Navigate to IP address with the port 8161. Press return to continue" dummyinput
  - title: Tidy up
    commands:
      hello-world:
        - run: kubectl delete namespaces hello-world
summary: |
  This example shows how to set up the Artemis operator, with a console and exposing metrics.